<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sungjin.jobfair.service.UserMapper">

    <!--**************************************************로그인 관련**************************************************-->
    <!--로그인시 비밀번호 같은지 비교-->
    <select id="getEncodePw" resultType="String" parameterType="UserVO">
        select user_pw
        from User
        where user_id = #{user_id}
    </select>
    <!--로그인-->
    <select id="login" resultType="UserVO">
        select *
        from User
        where user_id = #{user_id}
    </select>

    <!--유저정보 불러오기-->
    <select id="info" resultType="UserVO">
        select *
        from User
        where user_id = #{id}
    </select>


    <!--**************************************************Q&A**************************************************-->
    <!--유저 큐앤에이 등록-->
    <insert id="qnaRegist" parameterType="QnAVO">
        insert into QnA(user_id, qa_title, qa_content, qa_regDate, qa_type, com_num)
        values (#{user_id}, #{qa_title}, #{qa_content}, date_format(now(), '%Y-%m-%d'), #{qa_type}, #{com_num})
    </insert>
    <!--유저 큐앤에이 리스트-->
    <select id="getQnAList" resultType="QnAVO">
        select *
        from QnA
        where qa_type like "%q%"
        order by qa_num desc limit #{cri.pageStart}, #{cri.amount}
    </select>


    <!--    <select id="getPage" resultType="QnAVO">-->
    <!--        select * from qna-->
    <!--        order by qa_num desc limit #{pageStart}, #{amount}-->
    <!--    </select>-->


    <!--큐앤에이 상세페이지-->
    <select id="getQnADetail" resultType="QnAVO">
        select *
        from QnA
        where qa_num = #{qa_num}
    </select>
    <!--큐앤에이 수정-->
    <update id="uQnAModi" parameterType="QnAVO">
        update QnA
        set qa_title   = #{qa_title},
            qa_content = #{qa_content}
        where qa_num = #{qa_num}
    </update>

    <!--    <select id="uQnABtnClick" resultType="QnAVO">-->
    <!--        select * from qna where com_num like '%3%'-->
    <!--    </select>-->

    <select id="getMainQnAList" resultType="QnAVO">
        select *
        from QnA
        where qa_type like "%q%"
        order by qa_num desc
    </select>


    <!--**************************************************채용공고**************************************************-->
    <!--채용공고 리스트-->
    <select id="getJobPostList" resultType="EmpListVO">
        select *
        from JobPostingList j
        left join ApplyList a on j.jpl_num = a.jpl_num
        left join Company c on j.com_num = c.com_num
        <choose>
            <when test = "selSortInt == 1">
                order by j.jpl_num desc
            </when>
            <when test = "selSortInt == 2">
                where j.jpl_endDate >= DATE_FORMAT(now(), '%Y-%m-%d')
                order by j.jpl_endDate asc
            </when>
            <when test = "selSortInt == 3">
                order by j.jpl_salary desc
            </when>
        </choose>

    </select>
    <!--채용공고 상세검색-->
    <select id="getJobPostSrc" resultType="EmpListVO">
        select  * from JobPostingList j
        left join ApplyList a on j.jpl_num = a.jpl_num
        left join Company c on j.com_num = c.com_num
        where 1 = 1
        <if test="jpl_locationSi.length != 0">
            and j.jpl_locationSi in
            <foreach item="jpl_locationSi" index="index" collection="jpl_locationSi"
                     open="(" separator="," close=")">
                #{jpl_locationSi}
            </foreach>
        </if>

        <if test="jpl_locationGu.length != 0">
            and j.jpl_locationGu in
            <foreach item="jpl_locationGu" index="index" collection="jpl_locationGu"
                     open="(" separator="," close=")">
                #{jpl_locationGu}
            </foreach>
        </if>

        <if test="jpl_duty.length != 0">
            and j.jpl_duty in
            <foreach item="jpl_duty" index="index" collection="jpl_duty"
                     open="(" separator="," close=")">
                #{jpl_duty}
            </foreach>
        </if>

        <if test="jpl_workHistory.length != 0">
            and j.jpl_workHistory in
            <foreach item="jpl_workHistory" index="index" collection="jpl_workHistory"
                     open="(" separator="," close=")">
                #{jpl_workHistory}
            </foreach>
        </if>

        <if test="jpl_education.length != 0">
            and j.jpl_education in
            <foreach item="jpl_education" index="index" collection="jpl_education"
                     open="(" separator="," close=")">
                #{jpl_education}
            </foreach>
        </if>

        <if test="jpl_salary.length != 0">
            and j.jpl_salary in
            <foreach item="jpl_salary" index="index" collection="jpl_salary"
                     open="(" separator="," close=")">
                #{jpl_salary}
            </foreach>
        </if>

        <if test="jpl_certificate.length != 0">
            and j.jpl_certificate in
            <foreach item="jpl_certificate" index="index" collection="jpl_certificate"
                     open="(" separator="," close=")">
                #{jpl_certificate}
            </foreach>
        </if>

        <if test="jpl_conditions.length != 0">
            and j.jpl_conditions in
            <foreach item="jpl_conditions" index="index" collection="jpl_conditions"
                     open="(" separator="," close=")">
                #{jpl_conditions}
            </foreach>
        </if>

        <if test="jpl_workForm.length != 0">
            and j.jpl_workForm in
            <foreach item="jpl_workForm" index="index" collection="jpl_workForm"
                     open="(" separator="," close=")">
                #{jpl_workForm}
            </foreach>
        </if>

        <if test="inputSearch != ''">
            and j.jpl_title like
            concat('%', #{inputSearch}, '%') or
            com_name like
            concat('%', #{inputSearch}, '%')

        </if>

        <choose>
            <when test = "selSortInt == 1">
                order by j.jpl_num desc
            </when>
            <when test = "selSortInt == 2">
                and j.jpl_endDate >= DATE_FORMAT(now(), '%Y-%m-%d')
                order by j.jpl_endDate asc
            </when>
            <when test = "selSortInt == 3">
                order by j.jpl_salary desc
            </when>
        </choose>




    </select>

    <!--채용공고 지원하기-->
    <insert id="EmpApply">
        INSERT INTO
            ApplyList (user_id, jpl_num, res_num, al_state, al_regDate)
        VALUES (#{user_id}, #{jpl_num}, #{res_num}, "X", date_format(now(), '%Y-%m-%d'))
    </insert>
    <!--유저가 지원한 공고인지 찾기-->
    <select id="EmpApplied" resultType="int">
        select EXISTS(select * from ApplyList where user_id = #{user_id} and jpl_num = #{jpl_num} limit 1) as success
    </select>


    <!--유저 메인화면에 채용공고 데이터 뿌리기-->
    <select id="getMainJobInfo" resultType="EmpListVO">
        select j.jpl_num, j.jpl_title, j.jpl_endDate, j.jpl_fileName, j.jpl_filePath, j.jpl_fileUuid, c.com_name
        from JobPostingList j
                 left join Company c on j.com_num = c.com_num
        order by j.jpl_num desc
            limit 0, 8


    </select>

    <!--    채용공고 통계 / 지원자수의 성비 구하기 -->
    <select id="getGendertotal" resultType="StatisticVO">
        SELECT * FROM ApplyList a INNER JOIN User u
        ON a.user_id = u.user_id
    </select>


    <!--**************************************************마이페이지 이력서**************************************************-->
    <!--이력서정보-->
    <select id="resumeInfo" resultType="ResumeVO">
        select *
        from ResumeList
        where user_id = #{user_id}
    </select>
    <!--이력서 지우기-->
    <delete id="deleteResume">
        delete
        from ResumeList
        where res_num = #{res_num}
    </delete>
    <delete id="deleteEdu">
        delete
        from Education
        where res_num = #{res_num}
    </delete>
    <delete id="deleteWe">
        delete
        from WorkExperiences
        where res_num = #{res_num}
    </delete>
    <delete id="deleteCert">
        delete
        from Certificate
        where res_num = #{res_num}
    </delete>


    <!--**************************************************이력서 관련**************************************************-->
    <!--이력서 등록-->
    <insert id="regResume" parameterType="ResumeVO" useGeneratedKeys="true" keyProperty="res_num" keyColumn="res_num">
        insert into ResumeList (user_id, res_title, res_content, res_regDate,
                                res_picName, res_picPath, res_picUuid, res_name, res_email,
                                res_phone, res_address, res_birth)
        values (#{user_id}, #{res_title}, #{res_content}, date_format(now(), '%Y-%m-%d'),
                #{res_picName}, #{res_picPath}, #{res_picUuid}, #{res_name}, #{res_email},
                #{res_phone}, #{res_address}, #{res_birth})
    </insert>

    <!--이력서 학력등록-->
    <insert id="regResEdu" parameterType="EduVO">
        insert into Education (res_num, edu_degree, edu_schoolName, edu_major, edu_entranceDate,
                               edu_graduationDate,
                               edu_state, edu_grades, edu_totalGrades)
        values (#{res_num}, #{edu_degree}, #{edu_schoolName}, #{edu_major}, #{edu_entranceDate},
                #{edu_graduationDate}, #{edu_state}, #{edu_grades}, #{edu_totalGrades})
    </insert>
    <!--이력서 경력등록-->
    <insert id="regResWe" parameterType="WeVO">
        insert into WorkExperiences (res_num, we_company, we_department, we_position, we_job, we_emplDate,
                                     we_departureDate, we_salary)
        values (#{res_num}, #{we_company}, #{we_department}, #{we_position}, #{we_job}, #{we_emplDate},
                #{we_departureDate}, #{we_salary})
    </insert>
    <!--이력서 자격증 등록-->
    <insert id="regResCert" parameterType="CertVO">
        insert into Certificate (res_num, cert_name, cert_gainDate, cert_issueInstitute)
        values (#{res_num}, #{cert_name}, #{cert_gainDate}, #{cert_issueInstitute})
    </insert>

    <select id="getResDetail" resultType="ResumeVO">
        select *
        from ResumeList
        where res_num = #{res_num}
    </select>

    <select id="getEduDetail" resultType="map">
        select *
        from Education
        where res_num = #{res_num}
    </select>

    <select id="getWeDetail" resultType="map">
        select *
        from WorkExperiences
        where res_num = #{res_num}
    </select>

    <select id="getCertDetail" resultType="map">
        select *
        from Certificate
        where res_num = #{res_num}
    </select>

    <update id="modiResume" parameterType="ResumeVO">
        update ResumeList
        set (res_title = #{res_title}, res_content = #{res_content}, res_regDate = #{res_picName},
                res_picName= #{res_picPath}, res_picUuid=#{res_picUuid}, res_name = #{res_name}, res_email = #{res_email},
                res_phone = {res_phone}, res_address = #{res_address}, res_birth = #{res_birth})
        where res_num = #{res_num}
    </update>

    <update id="modiResEdu" parameterType="EduVO">
        update Education
        set (edu_degree = #{edu_degree}, edu_schoolName = #{edu_schoolName},
                edu_major = #{edu_major}, edu_entranceDate = #{edu_entranceDate}, edu_graduationDate = #{edu_graduationDate},
                edu_state = #{edu_state}, edu_grades = #{edu_grades}, edu_totalGrades = #{edu_totalGrades})
        where res_num = #{res_num}
    </update>

    <update id="modiResWe" parameterType="WeVO">
        update WorkExperiences set (we_company = #{we_company}, we_department = #{we_department}, we_position = #{we_position},
                                       we_job = #{we_job}, we_emplDate = #{we_emplDate}, we_departureDate = #{we_departureDate}, we_salary = #{we_salary}) where res_num =
    </update>

    <!--**************************************************지원현황관련**************************************************-->
    <!--지원 현황 전부 가져오기-->
    <select id="getApplyListAll" resultType="EmpApplyVO">
        select *
        from JobPostingList j
                 left join ApplyList a on a.jpl_num = j.jpl_num
                 left join Company c on c.com_num = j.jpl_num
        where user_id = #{user_id}
        order by al_regDate desc
    </select>
    <!--지원 현황 열람 가져오기-->
    <select id="getApplyListO" resultType="EmpApplyVO">
        select *
        from JobPostingList j
                 left join ApplyList a on a.jpl_num = j.jpl_num
                 left join Company c on c.com_num = j.jpl_num
        where user_id = #{user_id} and al_state like "%O%"
        order by al_regDate desc
    </select>
    <!--지원 현황 미열람 가져오기-->
    <select id="getApplyListX" resultType="EmpApplyVO">
        select *
        from JobPostingList j
                 left join ApplyList a on a.jpl_num = j.jpl_num
                 left join Company c on c.com_num = j.jpl_num
        where user_id = #{user_id} and al_state like "%X%"
        order by al_regDate desc
    </select>


    <!--**************************************************페이지네이션**************************************************-->
    <!--    <select id="getQnATotal" resultType="int">-->
    <!--        select count(*) from qna-->
    <!--    </select>-->


    <!--페이지네이션-->
    <select id="uQnAGetTotal" resultType="int">
        select count(*) from QnA where qa_type like "%q%"
    </select>


</mapper>
